{"ast":null,"code":"import _objectSpread from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import QuestionContext from'./QuestionContext';import{jsx as _jsx}from\"react/jsx-runtime\";export var CLIENT_ADD_QUESTION_ACTION='CLIENT_ADD_QUESTION_ACTION';export var CLIENT_DELETE_QUESTION_ACTION='CLIENT_DELETE_QUESTION_ACTION';export var CLIENT_INCREMENT_VOTE_ACTION='CLIENT_INCREMENT_VOTE_ACTION';export var CLIENT_DECREMENT_VOTE_ACTION='CLIENT_DECREMENT_VOTE_ACTION';export var SERVER_UPDATE_QUESTIONS_ACTION='SERVER_UPDATE_QUESTIONS_ACTION';export var SERVER_SET_QUESTIONS_ACTION='SERVER_SET_QUESTIONS_ACTION';export var SET_VOTES_ACTION='SET_VOTES_ACTION';// questionStates: [{\n//     question: {\n//         Id: String,\n//         Content: String,\n//         Votes: Number,\n//         Answered: Boolean,\n//         Current: Boolean\n//     }\n//     timeStamp: Number,\n//     removed: Boolean,\n// }...]\nfunction pickQuestionProperties(_ref){var Id=_ref.Id,Content=_ref.Content,Votes=_ref.Votes,Answered=_ref.Answered,Current=_ref.Current;return{Id:Id,Content:Content,Votes:Votes,Answered:Answered,Current:Current};}function sortByVote(questionState1,questionState2){return questionState2.question.Votes-questionState1.question.Votes;}var reducer=function reducer(state,action){switch(action.type){case CLIENT_ADD_QUESTION_ACTION:var newQuestionState={question:{Id:action.id,Content:action.content,Votes:0,Answered:false,Current:false},timeStamp:0,removed:false};return _objectSpread(_objectSpread({},state),{},{questionStates:state.questionStates.concat([newQuestionState]).sort(sortByVote)});case CLIENT_DELETE_QUESTION_ACTION:return _objectSpread(_objectSpread({},state),{},{questionStates:state.questionStates.map(function(s){if(s.question.Id===action.id){s.removed=true;}return s;}).sort(sortByVote)});case CLIENT_INCREMENT_VOTE_ACTION:return _objectSpread(_objectSpread({},state),{},{questionStates:state.questionStates.map(function(s){if(s.question.Id===action.id){s.question.Votes=s.question.Votes+1;}return s;}).sort(sortByVote)});case CLIENT_DECREMENT_VOTE_ACTION:return _objectSpread(_objectSpread({},state),{},{questionStates:state.questionStates.map(function(s){if(s.question.Id===action.id){s.question.Votes=s.question.Votes-1;}return s;}).sort(sortByVote)});case SERVER_UPDATE_QUESTIONS_ACTION:action.updates.forEach(function(update){var i=state.questionStates.findIndex(function(s){return update.question.Id===s.question.Id;});// Don't process if change older than client's change\nif(i!==-1&&update.timeStamp<state.questionStates[i].timeStamp){return;}switch(update.change){case'INSERT':if(i===-1){state.questionStates=state.questionStates.concat([{question:pickQuestionProperties(update.question),timeStamp:update.timeStamp,removed:false}]);}else{state.questionStates[i].timeStamp=update.timeStamp;}break;case'MODIFY':if(i===-1){state.questionStates=state.questionStates.concat([{question:pickQuestionProperties(update.question),timeStamp:update.timeStamp,removed:false}]);}else{state.questionStates[i].timeStamp=update.timeStamp;state.questionStates[i].question=pickQuestionProperties(update.question);}break;case'REMOVE':if(i===-1){state.questionStates=state.questionStates.concat([{question:pickQuestionProperties(update.question),timeStamp:update.timeStamp,removed:true}]);}else{state.questionStates[i].timeStamp=update.timeStamp;state.questionStates[i].removed=true;}break;default:return;}});return _objectSpread(_objectSpread({},state),{},{questionStates:state.questionStates.sort(sortByVote)});case SERVER_SET_QUESTIONS_ACTION:return _objectSpread(_objectSpread({},state),{},{questionStates:action.questions.map(function(q){return{question:pickQuestionProperties(q),timeStamp:0,removed:false};}).sort(sortByVote)});default:throw new Error('unexpected action type');}};var initialState={questionStates:[]};var QuestionProvider=function QuestionProvider(_ref2){var children=_ref2.children;var value=React.useReducer(reducer,initialState);return/*#__PURE__*/_jsx(QuestionContext.Provider,{value:value,children:children});};export default QuestionProvider;","map":{"version":3,"sources":["/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/src/providers/QuestionProvider.js"],"names":["React","QuestionContext","CLIENT_ADD_QUESTION_ACTION","CLIENT_DELETE_QUESTION_ACTION","CLIENT_INCREMENT_VOTE_ACTION","CLIENT_DECREMENT_VOTE_ACTION","SERVER_UPDATE_QUESTIONS_ACTION","SERVER_SET_QUESTIONS_ACTION","SET_VOTES_ACTION","pickQuestionProperties","Id","Content","Votes","Answered","Current","sortByVote","questionState1","questionState2","question","reducer","state","action","type","newQuestionState","id","content","timeStamp","removed","questionStates","concat","sort","map","s","updates","forEach","update","i","findIndex","change","questions","q","Error","initialState","QuestionProvider","children","value","useReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QuestionContext from './QuestionContext';\n\nexport const CLIENT_ADD_QUESTION_ACTION = 'CLIENT_ADD_QUESTION_ACTION';\nexport const CLIENT_DELETE_QUESTION_ACTION = 'CLIENT_DELETE_QUESTION_ACTION';\nexport const CLIENT_INCREMENT_VOTE_ACTION = 'CLIENT_INCREMENT_VOTE_ACTION';\nexport const CLIENT_DECREMENT_VOTE_ACTION = 'CLIENT_DECREMENT_VOTE_ACTION';\n\nexport const SERVER_UPDATE_QUESTIONS_ACTION = 'SERVER_UPDATE_QUESTIONS_ACTION';\nexport const SERVER_SET_QUESTIONS_ACTION = 'SERVER_SET_QUESTIONS_ACTION';\n\nexport const SET_VOTES_ACTION = 'SET_VOTES_ACTION';\n\n// questionStates: [{\n//     question: {\n//         Id: String,\n//         Content: String,\n//         Votes: Number,\n//         Answered: Boolean,\n//         Current: Boolean\n//     }\n//     timeStamp: Number,\n//     removed: Boolean,\n// }...]\n\nfunction pickQuestionProperties ({\n    Id, Content, Votes, Answered, Current\n}) {\n    return {\n        Id, Content, Votes, Answered, Current\n    }\n}\n\nfunction sortByVote(questionState1, questionState2) {\n    return questionState2.question.Votes - questionState1.question.Votes;\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case CLIENT_ADD_QUESTION_ACTION:\n            const newQuestionState = { \n                question: {\n                    Id: action.id,\n                    Content: action.content,\n                    Votes: 0,\n                    Answered: false,\n                    Current: false,\n                },\n                timeStamp: 0,\n                removed: false,\n            };\n\n            return {\n                ...state,\n                questionStates: state.questionStates.concat([newQuestionState]).sort(sortByVote)\n            };\n        case CLIENT_DELETE_QUESTION_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.removed = true\n                    }\n                    return s;\n                }).sort(sortByVote)\n            };\n        case CLIENT_INCREMENT_VOTE_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.question.Votes = s.question.Votes + 1;\n                    }\n                    return s;\n                }).sort(sortByVote)\n            }\n        case CLIENT_DECREMENT_VOTE_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.question.Votes = s.question.Votes - 1;\n                    }\n                    return s;\n                }).sort(sortByVote)\n            }\n        case SERVER_UPDATE_QUESTIONS_ACTION:\n            action.updates.forEach(update => {\n                const i = state.questionStates.findIndex(s => update.question.Id === s.question.Id)\n                // Don't process if change older than client's change\n                if (i !== -1 && update.timeStamp < state.questionStates[i].timeStamp) {\n                    return\n                }\n                switch (update.change) {\n                    case 'INSERT':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: false,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                        }\n                        break;\n                    case 'MODIFY':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: false,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                            state.questionStates[i].question = pickQuestionProperties(update.question)\n                        }\n                        break;\n                    case 'REMOVE':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: true,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                            state.questionStates[i].removed = true;\n                        }\n                        break;\n                    default:\n                        return;\n                }\n            })\n\n            return {\n                ...state,\n                questionStates: state.questionStates.sort(sortByVote),\n            };\n        case SERVER_SET_QUESTIONS_ACTION:\n            return {\n                ...state,\n                questionStates: action.questions.map(q => ({\n                    question: pickQuestionProperties(q),\n                    timeStamp: 0,\n                    removed: false,\n                })).sort(sortByVote),\n            };\n        default:\n            throw new Error('unexpected action type');\n    }\n};\n\nconst initialState = { questionStates: [] }\n\nconst QuestionProvider = ({ children }) => {\n    const value = React.useReducer(reducer, initialState);\n    return (\n        <QuestionContext.Provider value={value}>\n            {children}\n        </QuestionContext.Provider>\n    );\n};\n\nexport default QuestionProvider"]},"metadata":{},"sourceType":"module"}