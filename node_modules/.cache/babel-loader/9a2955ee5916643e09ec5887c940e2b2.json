{"ast":null,"code":"import _regeneratorRuntime from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import useOutsideClick from'../util/useOutsideClick';import IVSContext from'../providers/IVSContext';import QuestionContext from'../providers/QuestionContext';import UserContext from'../providers/UserContext';import VoteContext from'../providers/VoteContext';import{CLIENT_ADD_QUESTION_ACTION,CLIENT_INCREMENT_VOTE_ACTION}from'../providers/QuestionProvider';import{ADD_VOTE_ACTION}from'../providers/VoteProvider';import{HTTP_API_ENDPOINT}from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ADD_QUESTION_ENDPOINT=HTTP_API_ENDPOINT+'/addQuestion';var ADD_VOTE_ENDPOINT=HTTP_API_ENDPOINT+'/addVote';function AddQuestionModal(_ref){var onHideModal=_ref.onHideModal;var _React$useContext=React.useContext(QuestionContext),_React$useContext2=_slicedToArray(_React$useContext,2),questionDispatch=_React$useContext2[1];var _React$useContext3=React.useContext(VoteContext),_React$useContext4=_slicedToArray(_React$useContext3,2),voteDispatch=_React$useContext4[1];var _React$useContext5=React.useContext(IVSContext),channelArn=_React$useContext5.channelArn;var _React$useContext6=React.useContext(UserContext),_React$useContext7=_slicedToArray(_React$useContext6,1),accessJWTToken=_React$useContext7[0].accessJWTToken;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isPosting=_React$useState2[0],setIsPosting=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),textInput=_React$useState4[0],setTextInput=_React$useState4[1];var modalRef=React.useRef(null);useOutsideClick(modalRef,onHideModal);React.useEffect(function(){if(isPosting){var postAddQuestion=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var questionResponse,_yield$questionRespon,id,voteResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(ADD_QUESTION_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json','Authorization':accessJWTToken},body:JSON.stringify({channelArn:channelArn,question:textInput})});case 3:questionResponse=_context.sent;if(!(questionResponse.status===200)){_context.next=16;break;}_context.next=7;return questionResponse.json();case 7:_yield$questionRespon=_context.sent;id=_yield$questionRespon.id;questionDispatch({type:CLIENT_ADD_QUESTION_ACTION,id:id,content:textInput});_context.next=12;return fetch(ADD_VOTE_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json','Authorization':accessJWTToken},body:JSON.stringify({channelArn:channelArn,questionId:id})});case 12:voteResponse=_context.sent;if(voteResponse.status===200){questionDispatch({type:CLIENT_INCREMENT_VOTE_ACTION,id:id});voteDispatch({type:ADD_VOTE_ACTION,questionId:id});}_context.next=17;break;case 16:throw new Error();case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](0);console.log('Failure in adding and voting new question',_context.t0);case 22:onHideModal();case 23:case\"end\":return _context.stop();}}},_callee,null,[[0,19]]);}));return function postAddQuestion(){return _ref2.apply(this,arguments);};}();postAddQuestion();}// eslint-disable-next-line\n},[isPosting]);return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__el\",ref:modalRef,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mg-b-1\",children:\"Submit a question\"}),/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"fieldset\",{children:[/*#__PURE__*/_jsx(\"textarea\",{rows:'8',placeholder:'Type here...',onChange:function onChange(e){return setTextInput(e.target.value);},disabled:isPosting,value:textInput}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"em\",{children:\"Submissions are anonymous\"})}),/*#__PURE__*/_jsx(\"button\",{type:'submit',className:\"btn btn--primary mg-t-1\",onClick:function onClick(e){e.preventDefault();setIsPosting(true);},children:\"Submit\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal__overlay\"})]});}export default AddQuestionModal;","map":{"version":3,"sources":["/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/src/addQuestion/AddQuestionModal.js"],"names":["React","useOutsideClick","IVSContext","QuestionContext","UserContext","VoteContext","CLIENT_ADD_QUESTION_ACTION","CLIENT_INCREMENT_VOTE_ACTION","ADD_VOTE_ACTION","HTTP_API_ENDPOINT","ADD_QUESTION_ENDPOINT","ADD_VOTE_ENDPOINT","AddQuestionModal","onHideModal","useContext","questionDispatch","voteDispatch","channelArn","accessJWTToken","useState","isPosting","setIsPosting","textInput","setTextInput","modalRef","useRef","useEffect","postAddQuestion","fetch","method","headers","body","JSON","stringify","question","questionResponse","status","json","id","type","content","questionId","voteResponse","Error","console","log","e","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useOutsideClick from '../util/useOutsideClick';\nimport IVSContext from '../providers/IVSContext';\nimport QuestionContext from '../providers/QuestionContext';\nimport UserContext from '../providers/UserContext';\nimport VoteContext from '../providers/VoteContext';\nimport {\n    CLIENT_ADD_QUESTION_ACTION,\n    CLIENT_INCREMENT_VOTE_ACTION,\n} from '../providers/QuestionProvider'\nimport { ADD_VOTE_ACTION } from '../providers/VoteProvider';\nimport { HTTP_API_ENDPOINT } from '../config';\n\nconst ADD_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/addQuestion';\nconst ADD_VOTE_ENDPOINT = HTTP_API_ENDPOINT + '/addVote';\n\nfunction AddQuestionModal({\n    onHideModal\n}) {\n    const [,questionDispatch] = React.useContext(QuestionContext);\n    const [,voteDispatch] = React.useContext(VoteContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const [textInput, setTextInput] = React.useState('');\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postAddQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(ADD_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            question: textInput,\n                        }),\n                    });\n                    if (questionResponse.status === 200) {\n                        const { id } = await questionResponse.json();\n                        questionDispatch({\n                            type: CLIENT_ADD_QUESTION_ACTION,\n                            id,\n                            content: textInput,\n                        });\n\n                        const voteResponse = await fetch(ADD_VOTE_ENDPOINT, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': accessJWTToken,\n                            },\n                            body: JSON.stringify({\n                                channelArn,\n                                questionId: id,\n                            }),\n                        });\n\n                        if (voteResponse.status === 200) {\n                            questionDispatch({\n                                type: CLIENT_INCREMENT_VOTE_ACTION,\n                                id,\n                            });\n                            voteDispatch({\n                                type: ADD_VOTE_ACTION,\n                                questionId: id,\n                            });\n                        }\n                    } else {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in adding and voting new question', e);\n                }\n                onHideModal();\n            };\n\n            postAddQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Submit a question</h2>\n                <form>\n                <fieldset>\n                    <textarea\n                        rows={'8'}\n                        placeholder={'Type here...'}\n                        onChange={e => setTextInput(e.target.value)}\n                        disabled={isPosting}\n                        value={textInput}\n                    />\n                    <p><em>Submissions are anonymous</em></p>\n                    <button\n                        type={'submit'}\n                        className=\"btn btn--primary mg-t-1\"\n                        onClick={e => {\n                            e.preventDefault();\n                            setIsPosting(true)\n                        }}\n                    >\n                        Submit\n                    </button>\n                </fieldset>\n                </form>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default AddQuestionModal;\n"]},"metadata":{},"sourceType":"module"}