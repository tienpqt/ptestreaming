{"ast":null,"code":"import _regeneratorRuntime from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import useOutsideClick from'../../util/useOutsideClick';import IVSContext from'../../providers/IVSContext';import QuestionContext from'../../providers/QuestionContext';import UserContext from'../../providers/UserContext';import{CLIENT_DELETE_QUESTION_ACTION}from'../../providers/QuestionProvider';import{HTTP_API_ENDPOINT}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DELETE_QUESTION_ENDPOINT=HTTP_API_ENDPOINT+'/deleteQuestion';function DeleteQuestionModal(_ref){var questionId=_ref.questionId,onHideModal=_ref.onHideModal;var _React$useContext=React.useContext(QuestionContext),_React$useContext2=_slicedToArray(_React$useContext,2),dispatch=_React$useContext2[1];var _React$useContext3=React.useContext(IVSContext),channelArn=_React$useContext3.channelArn;var _React$useContext4=React.useContext(UserContext),_React$useContext5=_slicedToArray(_React$useContext4,1),accessJWTToken=_React$useContext5[0].accessJWTToken;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isPosting=_React$useState2[0],setIsPosting=_React$useState2[1];var modalRef=React.useRef(null);useOutsideClick(modalRef,onHideModal);React.useEffect(function(){if(isPosting){var postDeleteQuestion=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var questionResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(DELETE_QUESTION_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json','Authorization':accessJWTToken},body:JSON.stringify({channelArn:channelArn,id:questionId})});case 3:questionResponse=_context.sent;if(!(questionResponse.status===200)){_context.next=8;break;}dispatch({type:CLIENT_DELETE_QUESTION_ACTION,id:questionId});_context.next=9;break;case 8:throw new Error();case 9:_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log('Failure in deleting question',_context.t0);case 14:onHideModal();case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function postDeleteQuestion(){return _ref2.apply(this,arguments);};}();postDeleteQuestion();}// eslint-disable-next-line\n},[isPosting]);return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__el\",ref:modalRef,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mg-b-1\",children:\"Are you sure you want to delete this question?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid--responsive grid--2\",children:[/*#__PURE__*/_jsx(\"button\",{type:'button',className:\"btn btn--secondary mg-t-1\",onClick:onHideModal,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:'button',className:\"btn btn--destruct mg-t-1\",onClick:function onClick(){return setIsPosting(true);},children:\"Delete\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal__overlay\"})]});}export default DeleteQuestionModal;","map":{"version":3,"sources":["/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/src/questionList/Question/DeleteQuestionModal.js"],"names":["React","useOutsideClick","IVSContext","QuestionContext","UserContext","CLIENT_DELETE_QUESTION_ACTION","HTTP_API_ENDPOINT","DELETE_QUESTION_ENDPOINT","DeleteQuestionModal","questionId","onHideModal","useContext","dispatch","channelArn","accessJWTToken","useState","isPosting","setIsPosting","modalRef","useRef","useEffect","postDeleteQuestion","fetch","method","headers","body","JSON","stringify","id","questionResponse","status","type","Error","console","log"],"mappings":"8iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OACIC,6BADJ,KAEO,kCAFP,CAGA,OAASC,iBAAT,KAAkC,cAAlC,C,wFAEA,GAAMC,CAAAA,wBAAwB,CAAGD,iBAAiB,CAAG,iBAArD,CAEA,QAASE,CAAAA,mBAAT,MAGG,IAFCC,CAAAA,UAED,MAFCA,UAED,CADCC,WACD,MADCA,WACD,CACC,sBAAoBV,KAAK,CAACW,UAAN,CAAiBR,eAAjB,CAApB,wDAAQS,QAAR,uBACA,uBAAuBZ,KAAK,CAACW,UAAN,CAAiBT,UAAjB,CAAvB,CAAQW,UAAR,oBAAQA,UAAR,CACA,uBAA6Bb,KAAK,CAACW,UAAN,CAAiBP,WAAjB,CAA7B,yDAASU,cAAT,uBAASA,cAAT,CACA,oBAAkCd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,QAAQ,CAAGlB,KAAK,CAACmB,MAAN,CAAa,IAAb,CAAjB,CACAlB,eAAe,CAACiB,QAAD,CAAWR,WAAX,CAAf,CAEAV,KAAK,CAACoB,SAAN,CAAgB,UAAM,CAClB,GAAIJ,SAAJ,CAAe,CACX,GAAMK,CAAAA,kBAAkB,2FAAG,8LAEYC,CAAAA,KAAK,CAACf,wBAAD,CAA2B,CAC3DgB,MAAM,CAAE,MADmD,CAE3DC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiBV,cAFZ,CAFkD,CAM3DW,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBd,UAAU,CAAVA,UADiB,CAEjBe,EAAE,CAAEnB,UAFa,CAAf,CANqD,CAA3B,CAFjB,QAEboB,gBAFa,oBAafA,gBAAgB,CAACC,MAAjB,GAA4B,GAbb,0BAcflB,QAAQ,CAAC,CACLmB,IAAI,CAAE1B,6BADD,CAELuB,EAAE,CAAEnB,UAFC,CAAD,CAAR,CAde,kCAmBT,IAAIuB,CAAAA,KAAJ,EAnBS,yFAsBnBC,OAAO,CAACC,GAAR,CAAY,8BAAZ,cAtBmB,QAwBvBxB,WAAW,GAxBY,qEAAH,kBAAlBW,CAAAA,kBAAkB,2CAAxB,CA2BAA,kBAAkB,GACrB,CACD;AACH,CAhCD,CAgCG,CAACL,SAAD,CAhCH,EAkCA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,aAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAEE,QAAhC,wBACI,WAAI,SAAS,CAAC,QAAd,4DADJ,cAEI,aAAK,SAAS,CAAC,+BAAf,wBACI,eACI,IAAI,CAAE,QADV,CAEI,SAAS,CAAC,2BAFd,CAGI,OAAO,CAAER,WAHb,oBADJ,cAQI,eACI,IAAI,CAAE,QADV,CAEI,SAAS,CAAC,0BAFd,CAGI,OAAO,CAAE,yBAAMO,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAHb,oBARJ,GAFJ,GADJ,cAoBI,YAAK,SAAS,CAAC,gBAAf,EApBJ,GADJ,CAwBH,CAED,cAAeT,CAAAA,mBAAf","sourcesContent":["import React from 'react';\nimport useOutsideClick from '../../util/useOutsideClick';\nimport IVSContext from '../../providers/IVSContext';\nimport QuestionContext from '../../providers/QuestionContext';\nimport UserContext from '../../providers/UserContext';\nimport {\n    CLIENT_DELETE_QUESTION_ACTION,\n} from '../../providers/QuestionProvider'\nimport { HTTP_API_ENDPOINT } from '../../config';\n\nconst DELETE_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/deleteQuestion';\n\nfunction DeleteQuestionModal({\n    questionId,\n    onHideModal,\n}) {\n    const [,dispatch] = React.useContext(QuestionContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postDeleteQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(DELETE_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            id: questionId,\n                        }),\n                    });\n                    if (questionResponse.status === 200) {\n                        dispatch({\n                            type: CLIENT_DELETE_QUESTION_ACTION,\n                            id: questionId,\n                        });\n                    } else {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in deleting question', e);\n                }\n                onHideModal();\n            };\n\n            postDeleteQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Are you sure you want to delete this question?</h2>\n                <div className=\"grid grid--responsive grid--2\">\n                    <button\n                        type={'button'}\n                        className=\"btn btn--secondary mg-t-1\"\n                        onClick={onHideModal}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type={'button'}\n                        className=\"btn btn--destruct mg-t-1\"\n                        onClick={() => setIsPosting(true)}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default DeleteQuestionModal;\n"]},"metadata":{},"sourceType":"module"}