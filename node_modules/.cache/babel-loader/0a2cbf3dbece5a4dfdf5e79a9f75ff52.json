{"ast":null,"code":"import _regeneratorRuntime from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import useOutsideClick from'../../util/useOutsideClick';import IVSContext from'../../providers/IVSContext';import UserContext from'../../providers/UserContext';import{HTTP_API_ENDPOINT}from'../../config';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CURRENT_QUESTION_ENDPOINT=HTTP_API_ENDPOINT+'/setCurrentQuestion';function CurrentQuestionModal(_ref){var questionId=_ref.questionId,onHideModal=_ref.onHideModal;var _React$useContext=React.useContext(IVSContext),channelArn=_React$useContext.channelArn;var _React$useContext2=React.useContext(UserContext),_React$useContext3=_slicedToArray(_React$useContext2,1),accessJWTToken=_React$useContext3[0].accessJWTToken;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isPosting=_React$useState2[0],setIsPosting=_React$useState2[1];var modalRef=React.useRef(null);useOutsideClick(modalRef,onHideModal);React.useEffect(function(){if(isPosting){var postCurrentQuestion=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var questionResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(CURRENT_QUESTION_ENDPOINT,{method:'POST',headers:{'Content-Type':'application/json','Authorization':accessJWTToken},body:JSON.stringify({channelArn:channelArn,id:questionId})});case 3:questionResponse=_context.sent;if(!(questionResponse.status!==200)){_context.next=6;break;}throw new Error();case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log('Failure in setting current question',_context.t0);case 11:onHideModal();case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function postCurrentQuestion(){return _ref2.apply(this,arguments);};}();postCurrentQuestion();}// eslint-disable-next-line\n},[isPosting]);return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__el\",ref:modalRef,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mg-b-1\",children:\"Mark this question as current?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid--responsive grid--2\",children:[/*#__PURE__*/_jsx(\"button\",{type:'button',className:\"btn btn--secondary mg-t-1\",onClick:onHideModal,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:'button',className:\"btn btn--confirm mg-t-1\",onClick:function onClick(){return setIsPosting(true);},children:\"Mark as current\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal__overlay\"})]});}export default CurrentQuestionModal;","map":{"version":3,"sources":["/Users/duyennguyen/STREAMING/amazon-ivs-virtual-qa-web-demo/frontend/src/questionList/Question/CurrentQuestionModal.js"],"names":["React","useOutsideClick","IVSContext","UserContext","HTTP_API_ENDPOINT","CURRENT_QUESTION_ENDPOINT","CurrentQuestionModal","questionId","onHideModal","useContext","channelArn","accessJWTToken","useState","isPosting","setIsPosting","modalRef","useRef","useEffect","postCurrentQuestion","fetch","method","headers","body","JSON","stringify","id","questionResponse","status","Error","console","log"],"mappings":"8iBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,eAAP,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,OAASC,iBAAT,KAAkC,cAAlC,C,wFAEA,GAAMC,CAAAA,yBAAyB,CAAGD,iBAAiB,CAAG,qBAAtD,CAEA,QAASE,CAAAA,oBAAT,MAGG,IAFCC,CAAAA,UAED,MAFCA,UAED,CADCC,WACD,MADCA,WACD,CACC,sBAAuBR,KAAK,CAACS,UAAN,CAAiBP,UAAjB,CAAvB,CAAQQ,UAAR,mBAAQA,UAAR,CACA,uBAA6BV,KAAK,CAACS,UAAN,CAAiBN,WAAjB,CAA7B,yDAASQ,cAAT,uBAASA,cAAT,CACA,oBAAkCX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,QAAQ,CAAGf,KAAK,CAACgB,MAAN,CAAa,IAAb,CAAjB,CACAf,eAAe,CAACc,QAAD,CAAWP,WAAX,CAAf,CAEAR,KAAK,CAACiB,SAAN,CAAgB,UAAM,CAClB,GAAIJ,SAAJ,CAAe,CACX,GAAMK,CAAAA,mBAAmB,2FAAG,8LAEWC,CAAAA,KAAK,CAACd,yBAAD,CAA4B,CAC5De,MAAM,CAAE,MADoD,CAE5DC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,gBAAiBV,cAFZ,CAFmD,CAM5DW,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBd,UAAU,CAAVA,UADiB,CAEjBe,EAAE,CAAElB,UAFa,CAAf,CANsD,CAA5B,CAFhB,QAEdmB,gBAFc,oBAahBA,gBAAgB,CAACC,MAAjB,GAA4B,GAbZ,+BAcV,IAAIC,CAAAA,KAAJ,EAdU,uFAiBpBC,OAAO,CAACC,GAAR,CAAY,qCAAZ,cAjBoB,QAmBxBtB,WAAW,GAnBa,oEAAH,kBAAnBU,CAAAA,mBAAmB,2CAAzB,CAsBAA,mBAAmB,GACtB,CACD;AACH,CA3BD,CA2BG,CAACL,SAAD,CA3BH,EA6BA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,aAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,CAAEE,QAAhC,wBACI,WAAI,SAAS,CAAC,QAAd,4CADJ,cAEI,aAAK,SAAS,CAAC,+BAAf,wBACI,eACI,IAAI,CAAE,QADV,CAEI,SAAS,CAAC,2BAFd,CAGI,OAAO,CAAEP,WAHb,oBADJ,cAQI,eACI,IAAI,CAAE,QADV,CAEI,SAAS,CAAC,yBAFd,CAGI,OAAO,CAAE,yBAAMM,CAAAA,YAAY,CAAC,IAAD,CAAlB,EAHb,6BARJ,GAFJ,GADJ,cAoBI,YAAK,SAAS,CAAC,gBAAf,EApBJ,GADJ,CAwBH,CAED,cAAeR,CAAAA,oBAAf","sourcesContent":["import React from 'react';\nimport useOutsideClick from '../../util/useOutsideClick';\nimport IVSContext from '../../providers/IVSContext';\nimport UserContext from '../../providers/UserContext';\nimport { HTTP_API_ENDPOINT } from '../../config';\n\nconst CURRENT_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/setCurrentQuestion';\n\nfunction CurrentQuestionModal({\n    questionId,\n    onHideModal,\n}) {\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postCurrentQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(CURRENT_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            id: questionId,\n                        }),\n                    });\n                    if (questionResponse.status !== 200) {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in setting current question', e);\n                }\n                onHideModal();\n            };\n\n            postCurrentQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Mark this question as current?</h2>\n                <div className=\"grid grid--responsive grid--2\">\n                    <button\n                        type={'button'}\n                        className=\"btn btn--secondary mg-t-1\"\n                        onClick={onHideModal}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type={'button'}\n                        className=\"btn btn--confirm mg-t-1\"\n                        onClick={() => setIsPosting(true)}\n                    >\n                        Mark as current\n                    </button>\n                </div>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default CurrentQuestionModal;\n"]},"metadata":{},"sourceType":"module"}