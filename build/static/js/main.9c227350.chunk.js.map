{"version":3,"sources":["config.js","auth/AuthConfigure.js","providers/IVSContext.js","providers/IVSProvider.js","providers/UserContext.js","providers/UserProvider.js","providers/QuestionContext.js","providers/QuestionProvider.js","providers/PlayerMetadataContext.js","providers/PlayerMetadataProvider.js","providers/VoteContext.js","providers/VoteProvider.js","WebSocketClient.js","player/CurrentQuestion.js","player/Player.js","questionList/Question/VoteButton.js","util/useOutsideClick.js","questionList/Question/DeleteQuestionModal.js","questionList/Question/DeleteQuestionButton.js","questionList/Question/CurrentQuestionModal.js","questionList/Question/CurrentQuestionButton.js","questionList/Question/Question.js","questionList/QuestionList.js","addQuestion/AddQuestionModal.js","addQuestion/AddQuestionButton.js","auth/SignInModal.js","auth/SignInButton.js","App.js","index.js"],"names":["getValueFromStackOutput","key","index","backendStackOutput","findIndex","o","OutputKey","OutputValue","HTTP_API_ENDPOINT","WEBSOCKET_API_ENDPOINT","COGNITO_USER_POOL_ID","COGNITO_USER_POOL_CLIENT_ID","REGION","Amplify","configure","Auth","region","userPoolId","userPoolWebClientId","authenticationFlowType","IVSContext","React","createContext","getQueryStringValue","decodeURIComponent","window","location","search","replace","RegExp","encodeURIComponent","IVSProvider","children","value","channelArn","atob","playbackUrl","Provider","UserContext","SET_SIGNED_IN_USER_ACTION","SET_SIGNED_OUT_USER_ACTION","reducer","state","action","type","isSignedIn","isModerator","accessJWTToken","initialState","Error","accessToken","UserProvider","useReducer","QuestionContext","CLIENT_ADD_QUESTION_ACTION","CLIENT_DELETE_QUESTION_ACTION","CLIENT_INCREMENT_VOTE_ACTION","CLIENT_DECREMENT_VOTE_ACTION","SERVER_UPDATE_QUESTIONS_ACTION","SERVER_SET_QUESTIONS_ACTION","pickQuestionProperties","Id","Content","Votes","Answered","Current","sortByVote","questionState1","questionState2","question","newQuestionState","id","content","timeStamp","removed","questionStates","concat","sort","map","s","updates","forEach","update","i","change","questions","q","QuestionProvider","PlayerMetadataContext","SET_CURRENT_QUESTION_ACTION","currentQuestion","PlayerMetadataProvider","VoteContext","ADD_VOTE_ACTION","DELETE_VOTE_ACTION","SET_VOTES_ACTION","CLEAR_VOTES_ACTION","questionIdMap","questionId","newQuestionIdMap","VoteProvider","WebSocketClient","this","webSocketUrl","ws","WebSocket","onmessage","msg","dispatch","context","message","JSON","parse","data","console","debug","Consumer","setupWebSocket","Component","contextType","QuestionsContext","CurrentQuestion","votes","useContext","playerCurrentQuestion","showCurrentQuestion","className","width","height","viewBox","fill","xmlns","d","Player","useEffect","videojs","registerIVSTech","registerIVSQualityPlugin","getPlugin","player","techOrder","autoplay","muted","ivsPlayer","getIVSPlayer","PlayerEventType","getIVSEvents","addEventListener","TEXT_METADATA_CUE","cue","metadataText","text","log","ready","enableIVSQualityPlugin","src","play","dispose","playsInline","DELETE_VOTE_ENUM","NONE_ENUM","DELETE_VOTE_ENDPOINT","ADD_VOTE_ENDPOINT","VoteButton","disabled","questionDispatch","voteDispatch","useState","postVoteType","setPostVoteType","a","url","fetch","method","headers","body","stringify","status","postVote","votedState","onClick","useOutsideClick","ref","handleClickOutside","event","current","contains","target","document","removeEventListener","DELETE_QUESTION_ENDPOINT","DeleteQuestionModal","onHideModal","isPosting","setIsPosting","modalRef","useRef","postDeleteQuestion","DeleteQuestionButton","modalVisible","setModalVisibility","modal","Fragment","title","CURRENT_QUESTION_ENDPOINT","CurrentQuestionModal","postCurrentQuestion","CurrentQuestionButton","Question","QuestionList","questionComponents","questionState","shouldShowQuestion","push","ADD_QUESTION_ENDPOINT","AddQuestionModal","textInput","setTextInput","questionResponse","json","postAddQuestion","rows","placeholder","onChange","e","preventDefault","AddQuestionButton","SignInModal","theme","sectionHeaderContent","fontSize","fontWeight","sectionBody","flexDirection","flexGrow","formField","input","paddingLeft","sectionFooter","sectionFooterPrimaryContent","button","alignItems","alignContent","justifyContent","selectInput","gridTemplateColumns","sectionFooterSecondaryContent","hideDefault","onStateChange","GET_VOTES_ENDPOINT","fetchSetUserInfoVotes","userDispatch","signInUserSession","getModeratorStatusFromSession","jwtToken","votesResponse","reduce","v","QuestionId","session","userGroups","idToken","payload","undefined","indexOf","SignInButton","Hub","listen","currentAuthenticatedUser","user","setAuthListeners","signOut","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9c227350.chunk.js","sourcesContent":["import backendStackOutput from './backendStackOutput.json';\n\n// Backend stack output in the format of:\n// [[{\n//     OutputKey: xxx, \n//     OutputValue: xxx\n// }...]]\n\nfunction getValueFromStackOutput(key) {\n    const index = backendStackOutput[0].findIndex(o => o.OutputKey === key);\n    return backendStackOutput[0][index].OutputValue; \n}\n\nexport const HTTP_API_ENDPOINT = getValueFromStackOutput('HttpApiEndpoint');\nexport const WEBSOCKET_API_ENDPOINT = getValueFromStackOutput('WebsocketApiEndpoint');\nexport const COGNITO_USER_POOL_ID = getValueFromStackOutput('CognitoUserPoolId');\nexport const COGNITO_USER_POOL_CLIENT_ID = getValueFromStackOutput('CognitoClientId');\nexport const REGION = getValueFromStackOutput('Region');\n","import Amplify from 'aws-amplify';\nimport { \n    REGION,\n    COGNITO_USER_POOL_ID,\n    COGNITO_USER_POOL_CLIENT_ID,\n} from '../config';\n\nAmplify.configure({\n    Auth: {\n        region: REGION,\n        userPoolId: COGNITO_USER_POOL_ID,\n        userPoolWebClientId: COGNITO_USER_POOL_CLIENT_ID,\n        authenticationFlowType: 'USER_PASSWORD_AUTH',\n    }\n});","import React from 'react';\n\nconst IVSContext = React.createContext();\n\nexport default IVSContext;","import React from 'react';\nimport IVSContext from './IVSContext';\n\nfunction getQueryStringValue (key) {\n    return decodeURIComponent(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[.+*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));\n}\n\nconst IVSProvider = ({ children }) => {\n    const value = {\n        channelArn: window.atob(getQueryStringValue('channel')),\n        playbackUrl: window.atob(getQueryStringValue('playback')),\n    };\n\n    return (\n        <IVSContext.Provider value={value}>\n            {children}\n        </IVSContext.Provider>\n    );\n};\n\nexport default IVSProvider\n","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React from 'react';\nimport UserContext from './UserContext';\n\nexport const SET_SIGNED_IN_USER_ACTION = 'SET_SIGNED_IN_USER_ACTION';\nexport const SET_SIGNED_OUT_USER_ACTION = 'SET_SIGNED_OUT_USER_ACTION';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_SIGNED_IN_USER_ACTION:\n            return {\n                ...state,\n                isSignedIn: true,\n                isModerator: action.isModerator,\n                accessJWTToken: action.accessJWTToken,\n            };\n        case SET_SIGNED_OUT_USER_ACTION:\n            return { ...initialState };\n        default:\n            throw new Error('unexpected action type');\n    }\n};\n\nconst initialState = {\n    isSignedIn: false,\n    isModerator: false,\n    accessToken: '',\n}\n\nconst UserProvider = ({ children }) => {\n    const value = React.useReducer(reducer, initialState);\n    return (\n        <UserContext.Provider value={value}>\n            {children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserProvider","import React from 'react';\n\nconst QuestionContext = React.createContext();\n\nexport default QuestionContext;","import React from 'react';\nimport QuestionContext from './QuestionContext';\n\nexport const CLIENT_ADD_QUESTION_ACTION = 'CLIENT_ADD_QUESTION_ACTION';\nexport const CLIENT_DELETE_QUESTION_ACTION = 'CLIENT_DELETE_QUESTION_ACTION';\nexport const CLIENT_INCREMENT_VOTE_ACTION = 'CLIENT_INCREMENT_VOTE_ACTION';\nexport const CLIENT_DECREMENT_VOTE_ACTION = 'CLIENT_DECREMENT_VOTE_ACTION';\n\nexport const SERVER_UPDATE_QUESTIONS_ACTION = 'SERVER_UPDATE_QUESTIONS_ACTION';\nexport const SERVER_SET_QUESTIONS_ACTION = 'SERVER_SET_QUESTIONS_ACTION';\n\nexport const SET_VOTES_ACTION = 'SET_VOTES_ACTION';\n\n// questionStates: [{\n//     question: {\n//         Id: String,\n//         Content: String,\n//         Votes: Number,\n//         Answered: Boolean,\n//         Current: Boolean\n//     }\n//     timeStamp: Number,\n//     removed: Boolean,\n// }...]\n\nfunction pickQuestionProperties ({\n    Id, Content, Votes, Answered, Current\n}) {\n    return {\n        Id, Content, Votes, Answered, Current\n    }\n}\n\nfunction sortByVote(questionState1, questionState2) {\n    return questionState2.question.Votes - questionState1.question.Votes;\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case CLIENT_ADD_QUESTION_ACTION:\n            const newQuestionState = { \n                question: {\n                    Id: action.id,\n                    Content: action.content,\n                    Votes: 0,\n                    Answered: false,\n                    Current: false,\n                },\n                timeStamp: 0,\n                removed: false,\n            };\n\n            return {\n                ...state,\n                questionStates: state.questionStates.concat([newQuestionState]).sort(sortByVote)\n            };\n        case CLIENT_DELETE_QUESTION_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.removed = true\n                    }\n                    return s;\n                }).sort(sortByVote)\n            };\n        case CLIENT_INCREMENT_VOTE_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.question.Votes = s.question.Votes + 1;\n                    }\n                    return s;\n                }).sort(sortByVote)\n            }\n        case CLIENT_DECREMENT_VOTE_ACTION:\n            return {\n                ...state,\n                questionStates: state.questionStates.map(s => {\n                    if (s.question.Id === action.id) {\n                        s.question.Votes = s.question.Votes - 1;\n                    }\n                    return s;\n                }).sort(sortByVote)\n            }\n        case SERVER_UPDATE_QUESTIONS_ACTION:\n            action.updates.forEach(update => {\n                const i = state.questionStates.findIndex(s => update.question.Id === s.question.Id)\n                // Don't process if change older than client's change\n                if (i !== -1 && update.timeStamp < state.questionStates[i].timeStamp) {\n                    return\n                }\n                switch (update.change) {\n                    case 'INSERT':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: false,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                        }\n                        break;\n                    case 'MODIFY':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: false,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                            state.questionStates[i].question = pickQuestionProperties(update.question)\n                        }\n                        break;\n                    case 'REMOVE':\n                        if (i === -1) {\n                            state.questionStates = state.questionStates.concat([{\n                                question: pickQuestionProperties(update.question),\n                                timeStamp: update.timeStamp,\n                                removed: true,\n                            }]);\n                        } else {\n                            state.questionStates[i].timeStamp = update.timeStamp;\n                            state.questionStates[i].removed = true;\n                        }\n                        break;\n                    default:\n                        return;\n                }\n            })\n\n            return {\n                ...state,\n                questionStates: state.questionStates.sort(sortByVote),\n            };\n        case SERVER_SET_QUESTIONS_ACTION:\n            return {\n                ...state,\n                questionStates: action.questions.map(q => ({\n                    question: pickQuestionProperties(q),\n                    timeStamp: 0,\n                    removed: false,\n                })).sort(sortByVote),\n            };\n        default:\n            throw new Error('unexpected action type');\n    }\n};\n\nconst initialState = { questionStates: [] }\n\nconst QuestionProvider = ({ children }) => {\n    const value = React.useReducer(reducer, initialState);\n    return (\n        <QuestionContext.Provider value={value}>\n            {children}\n        </QuestionContext.Provider>\n    );\n};\n\nexport default QuestionProvider","import React from 'react';\n\nconst PlayerMetadataContext = React.createContext();\n\nexport default PlayerMetadataContext;","import React from 'react';\nimport PlayerMetadataContext from './PlayerMetadataContext';\n\nexport const SET_CURRENT_QUESTION_ACTION = 'SET_CURRENT_QUESTION_ACTION';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case SET_CURRENT_QUESTION_ACTION:\n            return {\n                ...state,\n                currentQuestion: action.question,\n            }\n        default:\n            throw new Error('unexpected action type');\n    }\n};\n\nconst initialState = { currentQuestion: null }\n\nconst PlayerMetadataProvider = ({ children }) => {\n    const value = React.useReducer(reducer, initialState);\n    return (\n        <PlayerMetadataContext.Provider value={value}>\n            {children}\n        </PlayerMetadataContext.Provider>\n    );\n};\n\nexport default PlayerMetadataProvider","import React from 'react';\n\nconst VoteContext = React.createContext();\n\nexport default VoteContext;","import React from 'react';\nimport VoteContext from './VoteContext';\n\nexport const ADD_VOTE_ACTION = 'ADD_VOTE_ACTION';\nexport const DELETE_VOTE_ACTION = 'DELETE_VOTE_ACTION';\nexport const SET_VOTES_ACTION = 'SET_VOTES_ACTION';\nexport const CLEAR_VOTES_ACTION = 'CLEAR_VOTES_ACTION';\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ADD_VOTE_ACTION:\n            return {\n                ...state,\n                questionIdMap: {\n                    ...state.questionIdMap,\n                    [action.questionId]: true,\n                },\n            }\n        case DELETE_VOTE_ACTION:\n            const newQuestionIdMap = state.questionIdMap;\n            delete newQuestionIdMap[action.questionId];\n            return {\n                ...state,\n                questionIdMap: { ...newQuestionIdMap }\n            }\n        case SET_VOTES_ACTION:\n            return {\n                ...state,\n                questionIdMap: action.questionIdMap,\n            }\n        case CLEAR_VOTES_ACTION:\n            return {\n                ...state,\n                questionIdMap: {},\n            }\n        default:\n            throw new Error('unexpected action type');\n    }\n};\n\nconst initialState = { questionIdMap: {} }\n\nconst VoteProvider = ({ children }) => {\n    const value = React.useReducer(reducer, initialState);\n    return (\n        <VoteContext.Provider value={value}>\n            {children}\n        </VoteContext.Provider>\n    );\n};\n\nexport default VoteProvider","import React from 'react';\nimport IVSContext from './providers/IVSContext';\nimport QuestionsContext from './providers/QuestionContext';\nimport { \n    SERVER_SET_QUESTIONS_ACTION,\n    SERVER_UPDATE_QUESTIONS_ACTION,\n} from './providers/QuestionProvider'\nimport { WEBSOCKET_API_ENDPOINT } from './config';\n\nclass WebSocketClient extends React.Component {\n    static contextType = QuestionsContext; \n    \n    constructor() {\n        super();\n        this.channelArn = '';\n    }\n\n    setupWebSocket(channelArn){\n        if (this.channelArn === channelArn) {\n            return;\n        }\n        this.channelArn = channelArn;\n        const webSocketUrl = WEBSOCKET_API_ENDPOINT + `?channelarn=` + channelArn;\n\n        this.ws = new WebSocket(webSocketUrl);\n\n        this.ws.onmessage = msg => {\n            const [, dispatch] = this.context;\n            const message = JSON.parse(msg.data)\n            switch(message.type) {\n                case 'INITIAL_STATE':\n                    console.debug('INIT STATE', message.questions)\n                    dispatch({\n                        type: SERVER_SET_QUESTIONS_ACTION,\n                        questions: message.questions,\n                    })\n                    break;\n                case 'UPDATES':\n                    console.debug('UPDATE', message.updates)\n                    dispatch({\n                        type: SERVER_UPDATE_QUESTIONS_ACTION,\n                        updates: message.updates,\n                    })\n                    break;\n                default:\n                    return;\n            }\n        }\n    }\n\n    render(){\n        return(\n            <IVSContext.Consumer>\n                {({ channelArn }) => this.setupWebSocket(channelArn)}\n            </IVSContext.Consumer> \n        )\n    }\n}\n\nexport default WebSocketClient","import React from 'react';\nimport QuestionContext from '../providers/QuestionContext';\nimport PlayerMetadataContext from '../providers/PlayerMetadataContext';\n\nfunction CurrentQuestion() {\n    const [{ questionStates }] = React.useContext(QuestionContext);\n    const [{ currentQuestion: playerCurrentQuestion }] = React.useContext(PlayerMetadataContext);\n\n    let showCurrentQuestion = true;\n    let content\n    let votes\n    if (playerCurrentQuestion === null) {\n        const index = questionStates.findIndex(({question}) => question.Current);\n        if (index === -1) {\n            showCurrentQuestion = false;\n        } else {\n            content = questionStates[index].question.Content;\n            votes = questionStates[index].question.Votes;\n        }\n    } else {\n        content = playerCurrentQuestion.Content;\n        votes = playerCurrentQuestion.Votes\n    }\n\n    return (\n        showCurrentQuestion ? (\n            <div className=\"current-question\">\n                <div className=\"c-item\">\n                    <div className=\"c-item__card\">\n                        <div className=\"c-item__votes\">\n                            <svg className=\"upvote-btn__svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.66797 11L4.96047 12.2925L10.0846 7.1775V18.3333H11.918V7.1775L17.033 12.3017L18.3346 11L11.0013 3.66666L3.66797 11Z\"/></svg>\n                            <span className=\"upvote-btn__count\">{votes}</span>\n                        </div>\n                        <div className=\"c-item__content\">\n                            <strong>Current question</strong>\n                            <p>{content}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ) : null\n    )\n}\n\nexport default CurrentQuestion;\n","import React from 'react';\nimport IVSContext from '../providers/IVSContext';\nimport PlayerMetadataContext from '../providers/PlayerMetadataContext';\nimport CurrentQuestion from './CurrentQuestion';\nimport { SET_CURRENT_QUESTION_ACTION } from '../providers/PlayerMetadataProvider';\n\nfunction Player() {\n    const { playbackUrl } = React.useContext(IVSContext);\n    const [, dispatch] = React.useContext(PlayerMetadataContext);\n\n    React.useEffect(() => {\n        // eslint-disable-next-line no-undef\n        const videojs = window.videojs,\n              registerIVSTech = window.registerIVSTech,\n              registerIVSQualityPlugin = window.registerIVSQualityPlugin;\n\n        // Set up IVS playback tech and quality plugin\n        const IVSPlugin = videojs.getPlugin(\"getIVSPlayer\");\n\n        // If the plugins haven't been loaded, load them.\n        if (!IVSPlugin) {\n          registerIVSTech(videojs);\n          registerIVSQualityPlugin(videojs);\n        }\n\n        const videoJsOptions = {\n          techOrder: [\"AmazonIVS\"],\n          autoplay: true,\n          muted: true,\n        };\n\n        // instantiate video.js\n        const player = videojs(\"amazon-ivs-videojs\", videoJsOptions);\n        const ivsPlayer = player.getIVSPlayer();\n        const PlayerEventType = player.getIVSEvents().PlayerEventType;\n\n        ivsPlayer.addEventListener(PlayerEventType.TEXT_METADATA_CUE, (cue) => {\n            const metadataText = cue.text;\n            console.log('Timed metadata: ', metadataText);\n            dispatch({\n                type: SET_CURRENT_QUESTION_ACTION,\n                question: JSON.parse(metadataText),\n            });\n        });\n\n        player.ready(() => {\n          player.enableIVSQualityPlugin();\n          player.src(playbackUrl);\n          player.play();\n        });\n\n        return () => {\n            player.dispose();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div className=\"player-wrapper\">\n            <CurrentQuestion />\n            <div data-vjs-player>\n                <video id=\"amazon-ivs-videojs\" className=\"video-js vjs-fluid\" playsInline />\n            </div>\n        </div>\n    );\n  }\n\nexport default Player;\n","import React from 'react';\nimport QuestionContext from '../../providers/QuestionContext';\nimport IVSContext from '../../providers/IVSContext';\nimport VoteContext from '../../providers/VoteContext';\nimport UserContext from '../../providers/UserContext';\nimport {\n    ADD_VOTE_ACTION,\n    DELETE_VOTE_ACTION,\n}  from '../../providers/VoteProvider';\nimport {\n    CLIENT_DECREMENT_VOTE_ACTION,\n    CLIENT_INCREMENT_VOTE_ACTION,\n}  from '../../providers/QuestionProvider';\nimport { HTTP_API_ENDPOINT } from '../../config';\n\nconst ADD_VOTE_ENUM = 'ADD_VOTE';\nconst DELETE_VOTE_ENUM = 'DELETE_VOTE';\nconst NONE_ENUM = 'NONE';\n\nconst DELETE_VOTE_ENDPOINT = HTTP_API_ENDPOINT + '/deleteVote';\nconst ADD_VOTE_ENDPOINT = HTTP_API_ENDPOINT + '/addVote';\n\nfunction VoteButton({\n    votes,\n    questionId,\n    disabled,\n}) {\n    const [,questionDispatch] = React.useContext(QuestionContext);\n    const [{ questionIdMap }, voteDispatch] = React.useContext(VoteContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [postVoteType, setPostVoteType] = React.useState(NONE_ENUM);\n\n    React.useEffect(() => {\n        if (postVoteType !== NONE_ENUM) {\n            const postVote = async () => {\n                try {\n                    questionDispatch({\n                        type: postVoteType === DELETE_VOTE_ENUM  ? CLIENT_DECREMENT_VOTE_ACTION : CLIENT_INCREMENT_VOTE_ACTION,\n                        id: questionId,\n                    });\n                    voteDispatch({\n                        type: postVoteType === DELETE_VOTE_ENUM  ? DELETE_VOTE_ACTION : ADD_VOTE_ACTION,\n                        questionId,\n                    })\n\n                    const url = postVoteType === DELETE_VOTE_ENUM ? DELETE_VOTE_ENDPOINT : ADD_VOTE_ENDPOINT;\n                    const response = await fetch(url,{\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            questionId,\n                        }),\n                    });\n\n                    if (response.status !== 200) {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failed to add/delete vote', e);\n                    questionDispatch({\n                        type: postVoteType === DELETE_VOTE_ENUM  ? CLIENT_INCREMENT_VOTE_ACTION : CLIENT_DECREMENT_VOTE_ACTION,\n                        id: questionId,\n                    });\n                    voteDispatch({\n                        type: postVoteType === DELETE_VOTE_ENUM  ? ADD_VOTE_ACTION : DELETE_VOTE_ACTION,\n                        questionId,\n                    })\n                }\n            };\n\n            postVote();\n        }\n        // eslint-disable-next-line\n    }, [postVoteType]);\n\n    const votedState = !!questionIdMap[questionId];\n\n    let className = ''\n    if (votedState) {\n        className = 'btn rounded upvote-btn has-voted';\n    } else if (disabled) {\n        className = 'btn rounded upvote-btn';\n    } else {\n        className = 'btn btn--primary rounded upvote-btn';\n    }\n\n    return (\n        <button\n            className={className}\n            onClick={() => setPostVoteType(votedState ? DELETE_VOTE_ENUM : ADD_VOTE_ENUM)}\n            disabled={disabled}\n        >\n            <svg className=\"upvote-btn__svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.66797 11L4.96047 12.2925L10.0846 7.1775V18.3333H11.918V7.1775L17.033 12.3017L18.3346 11L11.0013 3.66666L3.66797 11Z\"/></svg>\n            <span className=\"upvote-btn__count\">{votes}</span>\n        </button>\n    )\n}\n\nexport default VoteButton;\n","import React from 'react';\n\nfunction useOutsideClick(ref, onClick) {\n    React.useEffect(() => {\n        function handleClickOutside(event) {\n            if (ref.current && !ref.current.contains(event.target)) {\n                onClick();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    }, [ref, onClick]);\n}\n\nexport default useOutsideClick ","import React from 'react';\nimport useOutsideClick from '../../util/useOutsideClick';\nimport IVSContext from '../../providers/IVSContext';\nimport QuestionContext from '../../providers/QuestionContext';\nimport UserContext from '../../providers/UserContext';\nimport {\n    CLIENT_DELETE_QUESTION_ACTION,\n} from '../../providers/QuestionProvider'\nimport { HTTP_API_ENDPOINT } from '../../config';\n\nconst DELETE_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/deleteQuestion';\n\nfunction DeleteQuestionModal({\n    questionId,\n    onHideModal,\n}) {\n    const [,dispatch] = React.useContext(QuestionContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postDeleteQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(DELETE_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            id: questionId,\n                        }),\n                    });\n                    if (questionResponse.status === 200) {\n                        dispatch({\n                            type: CLIENT_DELETE_QUESTION_ACTION,\n                            id: questionId,\n                        });\n                    } else {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in deleting question', e);\n                }\n                onHideModal();\n            };\n\n            postDeleteQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Are you sure you want to delete this question?</h2>\n                <div className=\"grid grid--responsive grid--2\">\n                    <button\n                        type={'button'}\n                        className=\"btn btn--secondary mg-t-1\"\n                        onClick={onHideModal}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type={'button'}\n                        className=\"btn btn--destruct mg-t-1\"\n                        onClick={() => setIsPosting(true)}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default DeleteQuestionModal;\n","import React from 'react';\nimport DeleteQuestionModal from './DeleteQuestionModal';\n\nfunction DeleteQuestionButton({ questionId }) {\n    const [modalVisible, setModalVisibility] = React.useState(false);\n    const showModal = () => setModalVisibility(true)\n    const hideModal = () => setModalVisibility(false)\n    const modal = modalVisible ? (\n        <DeleteQuestionModal\n            questionId={questionId}\n            onHideModal={hideModal}\n        />\n    ) : null;\n    \n    return (\n        <React.Fragment>\n            {modal}\n            <button\n                onClick={showModal}\n                className=\"btn btn--icon btn--destruct\"\n                title=\"Delete\"\n            >\n                <svg className=\"icon icon--24 icon--inverted\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z\" /></svg>\n            </button>\n        </React.Fragment>\n    )\n}\n\nexport default DeleteQuestionButton;","import React from 'react';\nimport useOutsideClick from '../../util/useOutsideClick';\nimport IVSContext from '../../providers/IVSContext';\nimport UserContext from '../../providers/UserContext';\nimport { HTTP_API_ENDPOINT } from '../../config';\n\nconst CURRENT_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/setCurrentQuestion';\n\nfunction CurrentQuestionModal({\n    questionId,\n    onHideModal,\n}) {\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postCurrentQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(CURRENT_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            id: questionId,\n                        }),\n                    });\n                    if (questionResponse.status !== 200) {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in setting current question', e);\n                }\n                onHideModal();\n            };\n\n            postCurrentQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Mark this question as current?</h2>\n                <div className=\"grid grid--responsive grid--2\">\n                    <button\n                        type={'button'}\n                        className=\"btn btn--secondary mg-t-1\"\n                        onClick={onHideModal}\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type={'button'}\n                        className=\"btn btn--confirm mg-t-1\"\n                        onClick={() => setIsPosting(true)}\n                    >\n                        Mark as current\n                    </button>\n                </div>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default CurrentQuestionModal;\n","import React from 'react';\nimport CurrentQuestionModal from './CurrentQuestionModal';\n\nfunction CurrentQuestionButton({ questionId }) {\n    const [modalVisible, setModalVisibility] = React.useState(false);\n    const showModal = () => setModalVisibility(true)\n    const hideModal = () => setModalVisibility(false)\n    const modal = modalVisible ? (\n        <CurrentQuestionModal\n            questionId={questionId}\n            onHideModal={hideModal}\n        />\n    ) : null;\n    \n    return (\n        <React.Fragment>\n            {modal}\n            <button\n                onClick={showModal}\n                className=\"btn btn--icon btn--confirm\"\n                title=\"Mark as current\"\n            >\n                <svg className=\"icon icon--24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M18.99 20.4998L19 9.49976C19 8.82976 18.67 8.22976 18.16 7.86976L12 3.49976L5.84 7.86976C5.33 8.22976 5 8.82976 5 9.49976L5.01 20.4998L12 15.6598L18.99 20.4998Z\" /></svg>\n            </button>\n        </React.Fragment>\n    )\n}\n\nexport default CurrentQuestionButton;","import React from 'react';\nimport VoteButton from './VoteButton';\nimport DeleteButton from './DeleteQuestionButton';\nimport CurrentQuestionButton from './CurrentQuestionButton';\nimport UserContext from '../../providers/UserContext';\n\nfunction Question({\n    content, \n    id,\n    votes, \n}) {\n    const [{ isSignedIn, isModerator }] = React.useContext(UserContext);\n    return (\n        <div className=\"q-item\">\n            <div className=\"q-item__card\">\n                <VoteButton \n                    votes={votes}\n                    questionId={id}\n                    disabled={!isSignedIn}\n                />\n                <p className=\"q-item__content\">{content}</p>\n            </div>\n                {   \n                    isModerator &&\n                    <div className=\"q-item__moderation\">\n                        <CurrentQuestionButton questionId={id} />\n                        <DeleteButton questionId={id} />\n                    </div>\n                }\n        </div>\n    )\n}\n\nexport default Question;","import React from 'react';\nimport QuestionContext from '../providers/QuestionContext';\nimport PlayerMetadataContext from  '../providers/PlayerMetadataContext';\nimport Question from './Question/Question';\n\nfunction shouldShowQuestion(questionState, playerCurrentQuestion) {\n    if (questionState.removed || questionState.question.Answered) {\n        return false;\n    }\n    if (questionState.question.Current) {\n        if (playerCurrentQuestion === null || (playerCurrentQuestion.Id === questionState.question.Id)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction QuestionList() {\n    const [{ questionStates }] = React.useContext(QuestionContext);\n    const [{ currentQuestion: playerCurrentQuestion }] = React.useContext(PlayerMetadataContext);\n    let questionComponents = []\n    questionStates.forEach(s => {\n        if (shouldShowQuestion(s, playerCurrentQuestion)) {\n            questionComponents.push(\n                <Question\n                    key={`${s.question.Id}`} \n                    content={s.question.Content}\n                    votes={s.question.Votes}\n                    id={s.question.Id}\n                />\n            );\n        }\n    })\n    return <div className=\"questions\">{questionComponents}</div>\n}\n\nexport default QuestionList;","import React from 'react';\nimport useOutsideClick from '../util/useOutsideClick';\nimport IVSContext from '../providers/IVSContext';\nimport QuestionContext from '../providers/QuestionContext';\nimport UserContext from '../providers/UserContext';\nimport VoteContext from '../providers/VoteContext';\nimport {\n    CLIENT_ADD_QUESTION_ACTION,\n    CLIENT_INCREMENT_VOTE_ACTION,\n} from '../providers/QuestionProvider'\nimport { ADD_VOTE_ACTION } from '../providers/VoteProvider';\nimport { HTTP_API_ENDPOINT } from '../config';\n\nconst ADD_QUESTION_ENDPOINT = HTTP_API_ENDPOINT + '/addQuestion';\nconst ADD_VOTE_ENDPOINT = HTTP_API_ENDPOINT + '/addVote';\n\nfunction AddQuestionModal({\n    onHideModal\n}) {\n    const [,questionDispatch] = React.useContext(QuestionContext);\n    const [,voteDispatch] = React.useContext(VoteContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [{ accessJWTToken }] = React.useContext(UserContext);\n    const [isPosting, setIsPosting] = React.useState(false);\n    const [textInput, setTextInput] = React.useState('');\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    React.useEffect(() => {\n        if (isPosting) {\n            const postAddQuestion = async () => {\n                try {\n                    const questionResponse = await fetch(ADD_QUESTION_ENDPOINT, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': accessJWTToken,\n                        },\n                        body: JSON.stringify({\n                            channelArn,\n                            question: textInput,\n                        }),\n                    });\n                    if (questionResponse.status === 200) {\n                        const { id } = await questionResponse.json();\n                        questionDispatch({\n                            type: CLIENT_ADD_QUESTION_ACTION,\n                            id,\n                            content: textInput,\n                        });\n\n                        const voteResponse = await fetch(ADD_VOTE_ENDPOINT, {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': accessJWTToken,\n                            },\n                            body: JSON.stringify({\n                                channelArn,\n                                questionId: id,\n                            }),\n                        });\n\n                        if (voteResponse.status === 200) {\n                            questionDispatch({\n                                type: CLIENT_INCREMENT_VOTE_ACTION,\n                                id,\n                            });\n                            voteDispatch({\n                                type: ADD_VOTE_ACTION,\n                                questionId: id,\n                            });\n                        }\n                    } else {\n                        throw new Error();\n                    }\n                } catch (e){\n                    console.log('Failure in adding and voting new question', e);\n                }\n                onHideModal();\n            };\n\n            postAddQuestion();\n        }\n        // eslint-disable-next-line\n    }, [isPosting]);\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el\" ref={modalRef}>\n                <h2 className=\"mg-b-1\">Submit a question</h2>\n                <form>\n                <fieldset>\n                    <textarea\n                        rows={'8'}\n                        placeholder={'Type here...'}\n                        onChange={e => setTextInput(e.target.value)}\n                        disabled={isPosting}\n                        value={textInput}\n                    />\n                    <p><em>Submissions are anonymous</em></p>\n                    <button\n                        type={'submit'}\n                        className=\"btn btn--primary mg-t-1\"\n                        onClick={e => {\n                            e.preventDefault();\n                            setIsPosting(true)\n                        }}\n                    >\n                        Submit\n                    </button>\n                </fieldset>\n                </form>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default AddQuestionModal;\n","import React from 'react';\nimport AddQuestionModal from './AddQuestionModal';\nimport UserContext from '../providers/UserContext';\n\nfunction AddQuestionButton() {\n    const [modalVisible, setModalVisibility] = React.useState(false);\n    const [{ isSignedIn }] = React.useContext(UserContext);\n    const showModal = () => setModalVisibility(true)\n    const hideModal = () => setModalVisibility(false)\n    \n    return (\n        <React.Fragment>\n            {modalVisible ? (\n                <AddQuestionModal\n                    onHideModal={hideModal}\n                />\n            ) : null}\n            {isSignedIn ? (\n                <button\n                    onClick={showModal}\n                    className=\"btn btn--floating btn--fixed\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"></path>\n                    </svg>\n                </button>\n            ): null}\n        </React.Fragment>\n    )\n}\n\nexport default AddQuestionButton;","import React from 'react';\nimport useOutsideClick from '../util/useOutsideClick';\nimport { Authenticator, SignIn, SignUp, ConfirmSignUp, Greetings } from 'aws-amplify-react';\n\n\nfunction SignInModal({\n    onHideModal\n}) {\n    const modalRef = React.useRef(null);\n    useOutsideClick(modalRef, onHideModal);\n\n    const handleAuthStateChange = (state) => {\n        if (state === 'signedIn') {\n            onHideModal();\n        }\n    }\n\n    const MyTheme = {\n        sectionHeaderContent: {\n            fontSize: '2.4rem',\n            fontWeight: 'bold',\n        },\n        sectionBody: {\n            'width': '100%',\n            'margin': '2rem 0',\n            'display': 'flex',\n            flexDirection: 'column',\n            flexGrow: '1',\n        },\n        formField: {\n            'margin': '0.5rem 0',\n        },\n        input: {\n            'width': '100%',\n        },\n        a: {\n            fontWeight: 'bold',\n            'cursor': 'pointer',\n            paddingLeft: '0.5rem',\n        },\n        sectionFooter: {\n            'width': '100%',\n        },\n        sectionFooterPrimaryContent: {\n            'display': 'flex',\n        },\n        button: {\n            'display': 'flex',\n            'width': '100%',\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            fontWeight: 'bold',\n            'color': 'var(--color-text-inverted)',\n            'background': 'var(--color-bg-button-primary-default)',\n        },\n        selectInput: {\n            'display': 'grid',\n            gridTemplateColumns: 'auto 1fr',\n            'gridGap': '1rem',\n        },\n        sectionFooterSecondaryContent: {\n            'display': 'flex',\n            'margin': '1rem 0 0 0',\n        },\n    }\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal__el modal__el--auth\" ref={modalRef}>\n                <Authenticator theme={MyTheme} hideDefault={true} onStateChange={handleAuthStateChange}>\n                    <SignIn/>\n                    <SignUp/>\n                    <ConfirmSignUp/>\n                    <Greetings/>\n                </Authenticator>\n            </div>\n            <div className=\"modal__overlay\"></div>\n        </div>\n    )\n}\n\nexport default SignInModal;","import React from 'react';\nimport SignInModal from './SignInModal';\nimport UserContext from '../providers/UserContext';\nimport IVSContext from '../providers/IVSContext';\nimport VoteContext from '../providers/VoteContext';\nimport {\n    SET_SIGNED_IN_USER_ACTION,\n    SET_SIGNED_OUT_USER_ACTION,\n} from '../providers/UserProvider';\nimport {\n    SET_VOTES_ACTION,\n    CLEAR_VOTES_ACTION,\n} from '../providers/VoteProvider';\nimport { Hub, Auth } from 'aws-amplify'\nimport { HTTP_API_ENDPOINT } from '../config';\n\nconst GET_VOTES_ENDPOINT = HTTP_API_ENDPOINT + '/getVotes';\n\nasync function fetchSetUserInfoVotes(userDispatch, voteDispatch, signInUserSession, channelArn) {\n    userDispatch({\n        type: SET_SIGNED_IN_USER_ACTION,\n        isModerator: getModeratorStatusFromSession(signInUserSession),\n        accessJWTToken: signInUserSession.accessToken.jwtToken,\n    })\n\n    const votesResponse = await fetch(GET_VOTES_ENDPOINT, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': signInUserSession.accessToken.jwtToken,\n        },\n        body: JSON.stringify({ channelArn }),\n    });\n\n    if (votesResponse.status === 200) {\n        const votes = await votesResponse.json()\n        const questionIdMap = votes.reduce((map, v) => {\n            map[v.QuestionId] = true;\n            return map;\n        }, {})\n        voteDispatch({\n            type: SET_VOTES_ACTION,\n            questionIdMap,\n        })\n    }\n}\n\nfunction getModeratorStatusFromSession(session) {\n    const userGroups = session.idToken.payload['cognito:groups'];\n    if (userGroups !== undefined && userGroups.indexOf('moderator') !== -1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction SignInButton() {\n    const [modalVisible, setModalVisibility] = React.useState(false);\n    const [{ isSignedIn }, userDispatch] = React.useContext(UserContext);\n    const { channelArn } = React.useContext(IVSContext);\n    const [, voteDispatch] = React.useContext(VoteContext)\n    const showModal = () => setModalVisibility(true)\n    const hideModal = () => setModalVisibility(false)\n    const handleClick = () => {\n        if (isSignedIn) {\n            Auth.signOut()\n        } else {\n            showModal()\n        }\n    }\n\n    React.useEffect(() => {\n        async function setAuthListeners() {\n            Hub.listen('auth', ({ payload }) => {\n                switch (payload.event) {\n                    case 'signIn':\n                        fetchSetUserInfoVotes(userDispatch, voteDispatch, payload.data.signInUserSession, channelArn);\n                    break;\n                    default: // case: 'signOut'\n                        userDispatch({ type: SET_SIGNED_OUT_USER_ACTION });\n                        voteDispatch({ type: CLEAR_VOTES_ACTION });\n                    break;\n                }\n            });\n            try {\n                const user = await Auth.currentAuthenticatedUser();\n                fetchSetUserInfoVotes(userDispatch, voteDispatch, user.signInUserSession, channelArn);\n            } catch(e) {\n                userDispatch({ type: SET_SIGNED_OUT_USER_ACTION });\n                voteDispatch({ type: CLEAR_VOTES_ACTION });\n            }\n        }\n        setAuthListeners();\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <React.Fragment>\n            { modalVisible && <SignInModal onHideModal={hideModal}/> }\n            <button\n                className={isSignedIn ? 'btn' : 'btn btn--primary'}\n                onClick={handleClick}\n            >\n                {isSignedIn ? 'Sign out' : 'Sign in'}\n            </button>\n        </React.Fragment>\n    )\n}\n\nexport default SignInButton;\n","import React from 'react';\nimport './auth/AuthConfigure';\nimport IVSProvider from './providers/IVSProvider';\nimport UserProvider from './providers/UserProvider';\nimport QuestionProvider from './providers/QuestionProvider';\nimport PlayerMetadataProvider from './providers/PlayerMetadataProvider';\nimport VoteProvider from './providers/VoteProvider';\nimport WebSocketClient from './WebSocketClient'\nimport Player from './player/Player';\nimport QuestionList from './questionList/QuestionList';\nimport AddQuestionButton from './addQuestion/AddQuestionButton';\nimport SignInButton from './auth/SignInButton';\nimport './App.css';\n\nfunction App() {\n    return (\n        <IVSProvider>\n            <PlayerMetadataProvider>\n                <VoteProvider>\n                    <QuestionProvider>\n                        <UserProvider>\n                            <WebSocketClient/>\n                            <header>\n                                <h1>Interactive Live Q&A</h1>\n                                <SignInButton/>\n                            </header>\n                            <section>\n                                <Player/>\n                                <QuestionList/>\n                                <AddQuestionButton/>\n                            </section>\n                        </UserProvider>\n                    </QuestionProvider>\n                </VoteProvider>\n            </PlayerMetadataProvider>\n        </IVSProvider> \n    );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}